@page "/"
@using BLL.IService
@using Models;
@inject ILogger<Home> Logger
@rendermode InteractiveServer
@inject ICarDetectorUIService _carDetectorUIService

<PageTitle>CarCapture</PageTitle>

<div class="container" id="imageForm">
    <div class="form-group">
        <label for="imageInput" id="customeImageUpload"><b id="inputText">Upload car image</b></label>
        <InputFile id="imageInput" OnChange="HandleFileChange" />
    </div>
    @{
        if (!isSelected && !isLoading)
        {
            <div id="formSubmitEmpty">
                <b>Analyze</b>
            </div>
        }

        if (isSelected && !isLoading)
        {
            <button type="button" id="formSubmit" @onclick="HandleSubmit">
                <b>Analyze</b>
            </button>
        }

        if(isLoading)
        {
            <div id="loading">
                <img src="images/Loading.gif" />
            </div>
        }
    }
</div>

<div class="container bg-primary">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Car</th>
                <th scope="col">Color</th>
                <th scope="col">License Plate</th>
            </tr>
        </thead>
        <tbody>
            @{
                // if(isLoading)
                // {
                //     HandleSubmit();
                // }
                // if(result.ColorList != null)
                // {
                //     foreach (var item in result.ColorList)
                //     {
                //         <tr>
                //             <td>
                //                 @item.CarScore
                //             </td>
                //             <td>
                //                 @item.Color
                //             </td>
                //         </tr>
                //     }
                // }
            }

            <tr>
                <td>
                    <p>@isLoading</p>
                    <p>@imageBytes</p>
                    <p>@isSelected</p>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@code {
    public bool isLoading;
    public bool isSelected { get; set; }

    public byte[] imageBytes { get; set; }

    public CarDetectorResult result;

    private async Task HandleButtonClick()
    {
        await StartLoading();
        await InvokeAsync(StateHasChanged);
        await HandleSubmit();
    }

    private async Task HandleSubmit()
    {
        isLoading = true;
        StateHasChanged();

        // Issue https://github.com/dotnet/aspnetcore/issues/22286
        await Task.Delay(1);

        if (imageBytes != null)
        {
            Console.WriteLine("Before");
            result = await _carDetectorUIService.CarDetector(imageBytes);
            Console.WriteLine(result.ColorList);
        }

        isLoading = false;
    }

    private async Task StartLoading()
    {
        isLoading = true;
    }

    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        imageBytes = ms.ToArray();

        isSelected = true;
    }
}
